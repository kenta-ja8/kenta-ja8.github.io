---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import EmojiIcon from "../components/EmojiIcon.astro";
import { slugifyTag } from "../lib/tag";
import TagLink from "../components/TagLink.astro";
import { SITE_TITLE } from "../consts";

type Props = CollectionEntry<"blog">["data"] & { slug: string };

const { title, createdAt, updatedAt, heroIcon, tags, slug, description } =
	Astro.props;
const image = `/og-image/${slug}.png`;
---

<html lang="ja">
  <head>
    <BaseHead 
      title={`${title} | ${SITE_TITLE}`} 
      description={description} 
      image={image} 
      isArticle={true}
      createdAt={createdAt.toISOString()}
      updatedAt={updatedAt?.toISOString()}
    />
    <style>
      .hero-icon {
        font-size: 4em;
        text-align: center;
      }
      .titleBox {
        margin-bottom: 1rem;
        padding: 1rem 0;
        text-align: left;
        overflow-wrap: anywhere;
      }
      .title {
        width: fit-content;
        margin-right: auto;
        margin-left: auto;
      }
      .meta {
        margin-bottom: 0.5em;
        color: var(--font-color-medium-emphasis);
        text-align: right;
      }
      .meta > * + * {
        margin-top: 0.1em;
      }
      .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.3rem;
        justify-content: flex-end;
      }
      .tag {
        display: inline-block;
        padding: 0.3rem 0.6rem;
        background: var(--surface);
        border-radius: var(--surface-radius);
        text-decoration: none;
        color: inherit;
        box-shadow: 0 2px 6px rgba(var(--gray), 25%);
      }

      /* Blog Content */
      .contentBox :global(> h1, h2, h3, h4, h5, h6) {
        line-height: 1.2;
        margin: 2rem 0 1rem 0;
      }
      .contentBox :global(> h1) {
        font-size: 1.7rem;
        padding-bottom: 0.2rem;
        border-bottom: 2px solid rgb(var(--gray-light));
      }
      .contentBox :global(> h2) {
        font-size: 1.5rem;
      }
      .contentBox :global(> h3) {
        font-size: 1.3rem;
      }
      .contentBox :global(> h4) {
        font-size: 1.1rem;
      }
      .contentBox :global(> h5) {
        font-size: 1rem;
      }
      .contentBox :global(> h6) {
        font-size: 0.9rem;
      }
      .contentBox :global(> strong, b) {
        font-weight: 700;
      }
      .contentBox :global(a) {
        color: var(--accent);
      }
      .contentBox:first-child {
        margin: 0 0 0.5rem 0;
        line-height: 1.2;
      }
      .contentBox :global(> p) {
        line-height: 1.6;
        margin-top: 2rem;
      }
      .contentBox :global(> h1 + p, h2 + p, h3 + p, h4 + p, h5 + p, h6 + p) {
        margin-top: 0rem;
      }
      .contentBox :global(ol, ul) {
        padding-left: 2em;
      }
      .contentBox :global(> ul) {
        line-height: 1.6;
      }
      .contentBox :global(> li) {
        line-height: 1.6;
      }
      .contentBox :global(> textarea) {
        width: 100%;
        font-size: 16px;
      }
      .contentBox :global(> input) {
        font-size: 16px;
      }
      .contentBox :global(> table) {
        width: 100%;
      }
      .contentBox :global(img) {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
      }
      .contentBox :global(pre) {
        margin: 0.5em 0;
        padding: 1em;
        border-radius: 8px;
      }
      .contentBox :global(.remark-code-title) {
        margin: 1em 0 -0.8em 0;
        padding: 0.3em 0.6em;
        font-size: 0.9em;
        background: var(--gray-200);
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
        width: fit-content;
      }
      .contentBox :global(code:not(pre code)) {
        padding: 0.2em 0.2em;
        margin: 0 0.1em;
        background: var(--gray-200);
        border-radius: 4px;
        font-size: 0.9em;
        vertical-align: .08em;
      }
      .contentBox :global(> blockquote) {
        border-left: 4px solid var(--accent);
        padding: 0 0 0 20px;
        margin-top: 1rem;
        font-size: 1.2rem;
      }
      .contentBox :global(> hr) {
        border: none;
        border-top: 1px solid rgb(var(--gray-light));
      }
      .border {
        border-top: 4px solid var(--accent);
        width: 100px;
        max-width: 15%;
        margin: 0 auto;
        border-radius: 1000px;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="prose surface fade-in">
          <div class="hero-icon">
            {heroIcon && <EmojiIcon>{heroIcon}</EmojiIcon>}
          </div>
          <div class="titleBox">
            <h1 class="title">{title}</h1>

            <div class="meta">
              <div>
                CreatedAt: <FormattedDate date={createdAt} />
              </div>
              {
                updatedAt && (
                  <div>
                    UpdatedAt: <FormattedDate date={updatedAt} />
                  </div>
                )
              }
              <div class="tags">
                {tags?.map((tag) => (
                  <TagLink tag={tag} href={`/blog/tag/${slugifyTag(tag)}/`} />
                ))}
              </div>
            </div>
            <hr class="border" />
          </div>
          <div class="contentBox">
            <slot />
          </div>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>

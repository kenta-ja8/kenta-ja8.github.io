---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "ress/dist/ress.min.css";
import "../styles/global.css";
import { AUTHOR, SITE_TITLE, RSS_PATH } from "../consts";

interface Props {
	title: string;
	description?: string;
	image?: string;
	isArticle?: boolean;
	createdAt?: string;
	updatedAt?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
	title,
	description,
	image = "/my-icon.jpeg",
	isArticle = false,
	createdAt,
	updatedAt,
} = Astro.props;
import ProductionOnly from "./ProductionOnly.astro";
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />

<!-- Favicon -->

<link rel="icon" href="/favicon/favicon.ico" type="image/x-icon" />
<link
  rel="icon"
  type="image/png"
  sizes="32x32"
  href="/favicon/favicon-32x32.png"
/>
<link
  rel="icon"
  type="image/png"
  sizes="16x16"
  href="/favicon/favicon-16x16.png"
/>
<link
  rel="apple-touch-icon"
  sizes="180x180"
  href="/favicon/apple-touch-icon.png"
/>
<link rel="manifest" href="/favicon/site.webmanifest" />

<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
{description && <meta name="description" content={description} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={isArticle ? "article" : "website"} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
{description && <meta property="og:description" content={description} />}
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="article:author" content={AUTHOR} />
{isArticle && createdAt && <meta property="article:published_time" content={createdAt} />}
{isArticle && updatedAt && <meta property="article:modified_time" content={updatedAt} />}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
{description && <meta property="twitter:description" content={description} />}
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<ProductionOnly>
  <script
    type="text/partytown"
    src="https://www.googletagmanager.com/gtag/js?id=G-74QJTSY96X"></script>

  <script type="text/partytown">
    window.dataLayer = window.dataLayer || [];
    function gtag() {
      dataLayer.push(arguments);
    }
    gtag("js", new Date());
    gtag("config", "G-74QJTSY96X");
  </script>
</ProductionOnly>

<!-- RSS -->
<link rel="alternate" type="application/rss+xml" href={RSS_PATH} title="Blog Posts">

<!-- Structured Data (JSON-LD) -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@graph": [
    {
      "@type": "WebSite",
      "@id": `${Astro.site}`,
      "url": Astro.site?.toString(),
      "name": SITE_TITLE,
      "description": "ソフトウェアエンジニア Kenta のブログサイト",
      "inLanguage": "ja",
      "author": {
        "@type": "Person",
        "name": AUTHOR,
        "url": Astro.site?.toString()
      }
    },
    ...(isArticle ? [{
      "@type": "BlogPosting",
      "@id": `${Astro.url}`,
      "url": Astro.url.toString(),
      "headline": title,
      ...(description && { "description": description }),
      ...(createdAt && { "datePublished": createdAt }),
      ...(updatedAt && { "dateModified": updatedAt }),
      "author": {
        "@type": "Person",
        "name": AUTHOR,
      },
      "publisher": {
        "@type": "Person",
        "name": AUTHOR,
        "url": Astro.site?.toString()
      },
      "image": new URL(image, Astro.url).toString(),
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": Astro.url.toString()
      },
      "inLanguage": "ja"
    }] : [])
  ]
})}></script>

---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE } from "../../consts";
import { getCollection } from "astro:content";
import { slugifyCategory } from "../../lib/category";

const posts = (await getCollection("blog", ({ data }) => !data.draft)).sort(
  (a, b) => b.data.createdAt.valueOf() - a.data.createdAt.valueOf()
);
const map = new Map<string, { name: string; slug: string; count: number }>();
for (const post of posts) {
  for (const cat of post.data.category || []) {
    const slug = slugifyCategory(cat);
    const entry = map.get(slug) || { name: cat, slug, count: 0 };
    if (!map.has(slug)) {
      map.set(slug, entry);
    }
    entry.count++;
  }
}
const categories = Array.from(map.values()).sort((a, b) => a.name.localeCompare(b.name));
---
<!DOCTYPE html>
<html lang="ja">
  <head>
    <BaseHead title={`${SITE_TITLE} Categories`} />
    <style>
      .list {
        list-style-type: none;
        padding: 0;
      }
      .list li + li {
        margin-top: 0.5rem;
      }
    </style>
  </head>
  <body>
    <Header />
    <main class="fade-in">
      <h1>Categories</h1>
      <ul class="list">
        {categories.map((c) => (
          <li>
            <a href={`/category/${c.slug}/`}>{c.name} ({c.count})</a>
          </li>
        ))}
      </ul>
    </main>
    <Footer />
  </body>
</html>
